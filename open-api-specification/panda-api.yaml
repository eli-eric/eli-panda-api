basePath: /
definitions:
  models.CatalogueCategoryProperty:
    properties:
      defaultValue:
        type: string
      listOfValues:
        items:
          type: string
        type: array
      name:
        type: string
      type:
        $ref: '#/definitions/models.CatalogueCategoryPropertyType'
      uid:
        type: string
      unit:
        $ref: '#/definitions/models.Codebook'
    type: object
  models.CatalogueCategoryPropertyType:
    properties:
      code:
        type: string
      name:
        type: string
      uid:
        type: string
    type: object
  models.CatalogueItem:
    properties:
      catalogueNumber:
        type: string
      category:
        $ref: '#/definitions/models.Codebook'
      categoryUID:
        type: string
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.CatalogueItemDetail'
        type: array
      lastUpdateTime:
        type: string
      manufacturerNumber:
        type: string
      manufacturerUrl:
        type: string
      miniImageUrl:
        items:
          type: string
        type: array
      name:
        type: string
      supplier:
        $ref: '#/definitions/models.Codebook'
      uid:
        type: string
    type: object
  models.CatalogueItemDetail:
    properties:
      property:
        $ref: '#/definitions/models.CatalogueCategoryProperty'
      propertyGroup:
        type: string
      value:
        type: any
    type: object
  models.Codebook:
    properties:
      additionalData:
        type: string
      code:
        type: string
      name:
        type: string
      uid:
        type: string
    type: object
  models.EunLocation:
    properties:
      eun:
        type: string
      location_uid:
        type: string
    type: object
  models.PhysicalItem:
    properties:
      catalogueItem:
        $ref: '#/definitions/models.CatalogueItem'
      currency:
        type: string
      eun:
        type: string
      itemUsage:
        $ref: '#/definitions/models.Codebook'
      price:
        type: any
      serialNumber:
        type: string
      uid:
        type: string
    type: object
  models.System:
    properties:
      description:
        type: string
      hasSubsystems:
        type: boolean
      history:
        items:
          $ref: '#/definitions/models.SystemHistory'
        type: array
      importance:
        $ref: '#/definitions/models.Codebook'
      location:
        $ref: '#/definitions/models.Codebook'
      miniImageUrl:
        items:
          type: string
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/models.Codebook'
      parentPath:
        items:
          $ref: '#/definitions/models.SystemSimpleResponse'
        type: array
      parentUid:
        type: string
      physicalItem:
        $ref: '#/definitions/models.PhysicalItem'
      responsible:
        $ref: '#/definitions/models.Codebook'
      sparesIn:
        type: integer
      sparesOut:
        type: integer
      statistics:
        $ref: '#/definitions/models.SystemStatistics'
      systemAlias:
        type: string
      systemCode:
        type: string
      systemLevel:
        type: string
      systemType:
        $ref: '#/definitions/models.Codebook'
      uid:
        type: string
      zone:
        $ref: '#/definitions/models.Codebook'
    type: object
  models.SystemCodeRequest:
    properties:
      parentUid:
        type: string
      systemTypeUid:
        type: string
      zoneUid:
        type: string
    type: object
  models.SystemHistory:
    properties:
      action:
        type: string
      changedAt:
        type: string
      changedBy:
        type: string
      detail:
        $ref: '#/definitions/models.SystemHistoryDetail'
      historyType:
        type: string
      uid:
        type: string
    type: object
  models.SystemHistoryDetail:
    properties:
      direction:
        type: string
      systemName:
        type: string
      systemUid:
        type: string
    type: object
  models.SystemSimpleResponse:
    properties:
      name:
        type: string
      uid:
        type: string
    type: object
  models.SystemStatistics:
    properties:
      sparePartsCount:
        type: integer
      subsystemsCount:
        type: integer
    type: object
  models.UserAuthInfo:
    properties:
      accessToken:
        type: string
      email:
        type: string
      facility:
        type: string
      facilityCode:
        type: string
      firstName:
        type: string
      isEnabled:
        type: boolean
      lastName:
        type: string
      passwordHash:
        type: string
      roles:
        items:
          type: string
        type: array
      uid:
        type: string
      username:
        type: string
    type: object
host: localhost:50000
info:
  contact:
    email: jiri.svacha@eli-beams.eu
    name: Jiří Švácha
  description: This is the REST API to the PANDA database. \n This is the only place
    to access data from the PANDA database.
  title: PANDA REST API - localhost
  version: "1.0"
paths:
  /v1/getuserbyazureidtoken:
    get:
      description: Get user by azure id token
      parameters:
      - description: Tenant ID
        in: query
        name: tenantId
        required: true
        type: string
      - description: Azure ID Token
        in: query
        name: azureIdToken
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserAuthInfo'
        "401":
          description: Unauthorized
      summary: Get user by azure id token
      tags:
      - Security
  /v1/order/{uid}:
    delete:
      description: Delete an order by order UID
      parameters:
      - description: Order UID
        in: path
        name: uid
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete an order
      tags:
      - Orders
  /v1/system/system-code:
    post:
      description: Create new system with new unique system code based on system type
        and zone
      parameters:
      - description: System code request model
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.SystemCodeRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.System'
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create new system with code
      tags:
      - Systems
  /v1/systems/locations-flat:
    get:
      description: Get all locations flat list
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Codebook'
            type: array
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get all locations flat list
      tags:
      - Systems
  /v1/systems/sync-locations-by-eun:
    post:
      consumes:
      - application/json
      description: Sync system locations by EUNs
      parameters:
      - description: EUN with location UID
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/models.EunLocation'
          type: array
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Sync system locations by EUNs
      tags:
      - Systems
  /v1/systems/system-types:
    get:
      description: Get all system types
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Codebook'
            type: array
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get all system types
      tags:
      - Systems
  /v1/systems/zones:
    get:
      description: Get all zones
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Codebook'
            type: array
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get all zones
      tags:
      - Systems
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: 'JWT token. <br> How to obtain: https://eli-eric.atlassian.net/wiki/spaces/CS/pages/948797504/How+to+get+PANDA+API+Token
      <br> Add word Bearer before the token here.'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
