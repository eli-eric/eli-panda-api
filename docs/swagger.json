{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the REST API to the PANDA database. \\n This is the only place to access data from the PANDA database.",
        "title": "PANDA REST API - localhost",
        "contact": {
            "name": "Jiří Švácha",
            "email": "jiri.svacha@eli-beams.eu"
        },
        "version": "1.0"
    },
    "host": "localhost:50000",
    "basePath": "/",
    "paths": {
        "/v1/getuserbyazureidtoken": {
            "get": {
                "description": "Get user by azure id token",
                "tags": [
                    "Security"
                ],
                "summary": "Get user by azure id token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "tenantId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Azure ID Token",
                        "name": "azureIdToken",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserAuthInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/v1/order/{uid}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an order by order UID",
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order UID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/system/system-code": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new system code",
                "tags": [
                    "Systems"
                ],
                "summary": "Create new system code",
                "parameters": [
                    {
                        "description": "System code request model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SystemCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request - missing required fields"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/systems/locations-flat": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all locations flat list",
                "tags": [
                    "Systems"
                ],
                "summary": "Get all locations flat list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Codebook"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/systems/sync-locations-by-eun": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sync system locations by EUNs",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Systems"
                ],
                "summary": "Sync system locations by EUNs",
                "parameters": [
                    {
                        "description": "EUN with location UID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.EunLocation"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/systems/system-types": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all system types",
                "tags": [
                    "Systems"
                ],
                "summary": "Get all system types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Codebook"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/systems/zones": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all zones",
                "tags": [
                    "Systems"
                ],
                "summary": "Get all zones",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Codebook"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Codebook": {
            "type": "object",
            "properties": {
                "additionalData": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "models.EunLocation": {
            "type": "object",
            "properties": {
                "eun": {
                    "type": "string"
                },
                "location_uid": {
                    "type": "string"
                }
            }
        },
        "models.SystemCodeRequest": {
            "type": "object",
            "properties": {
                "parentUid": {
                    "type": "string"
                },
                "systemTypeUid": {
                    "type": "string"
                },
                "zoneUid": {
                    "type": "string"
                }
            }
        },
        "models.UserAuthInfo": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "facility": {
                    "type": "string"
                },
                "facilityCode": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uid": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT token. \u003cbr\u003e How to obtain: https://eli-eric.atlassian.net/wiki/spaces/CS/pages/948797504/How+to+get+PANDA+API+Token \u003cbr\u003e Add word Bearer before the token here.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}