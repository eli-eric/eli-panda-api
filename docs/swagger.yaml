basePath: /
definitions:
  models.CatalogueCategoryProperty:
    properties:
      defaultValue:
        type: string
      listOfValues:
        items:
          type: string
        type: array
      name:
        type: string
      type:
        $ref: '#/definitions/models.CatalogueCategoryPropertyType'
      uid:
        type: string
      unit:
        $ref: '#/definitions/models.Codebook'
    type: object
  models.CatalogueCategoryPropertyType:
    properties:
      code:
        type: string
      name:
        type: string
      uid:
        type: string
    type: object
  models.CatalogueItem:
    properties:
      catalogueNumber:
        type: string
      category:
        $ref: '#/definitions/models.Codebook'
      categoryUID:
        type: string
      description:
        type: string
      details:
        items:
          $ref: '#/definitions/models.CatalogueItemDetail'
        type: array
      lastUpdateTime:
        type: string
      manufacturerNumber:
        type: string
      manufacturerUrl:
        type: string
      miniImageUrl:
        items:
          type: string
        type: array
      name:
        type: string
      supplier:
        $ref: '#/definitions/models.Codebook'
      uid:
        type: string
    type: object
  models.CatalogueItemDetail:
    properties:
      property:
        $ref: '#/definitions/models.CatalogueCategoryProperty'
      propertyGroup:
        type: string
      value: {}
    type: object
  models.Codebook:
    properties:
      additionalData:
        type: string
      code:
        type: string
      name:
        type: string
      uid:
        type: string
    type: object
  models.EunLocation:
    properties:
      eun:
        type: string
      location_uid:
        type: string
    type: object
  models.GraphLink:
    properties:
      relationship:
        type: string
      source:
        type: string
      target:
        type: string
    type: object
  models.GraphNode:
    properties:
      label:
        type: string
      name:
        type: string
      properties:
        additionalProperties:
          type: string
        type: object
      uid:
        type: string
    type: object
  models.GraphResponse:
    properties:
      links:
        items:
          $ref: '#/definitions/models.GraphLink'
        type: array
      nodes:
        items:
          $ref: '#/definitions/models.GraphNode'
        type: array
    type: object
  models.ItemForEunPrint:
    properties:
      catalogueNumber:
        type: string
      eun:
        type: string
      location:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      quantity:
        type: integer
      serialNumber:
        type: string
    type: object
  models.OrderDetail:
    properties:
      contractNumber:
        type: string
      lastUpdateTime:
        type: string
      name:
        type: string
      notes:
        type: string
      orderDate:
        type: string
      orderLines:
        items:
          $ref: '#/definitions/models.OrderLine'
        type: array
      orderNumber:
        type: string
      orderStatus:
        $ref: '#/definitions/models.Codebook'
      procurementResponsible:
        $ref: '#/definitions/models.Codebook'
      requestNumber:
        type: string
      requestor:
        $ref: '#/definitions/models.Codebook'
      supplier:
        $ref: '#/definitions/models.Codebook'
      uid:
        type: string
    type: object
  models.OrderLine:
    properties:
      catalogueNumber:
        type: string
      catalogueUid:
        type: string
      currency:
        type: string
      deliveredTime:
        type: string
      eun:
        type: string
      isDelivered:
        type: boolean
      itemUsage:
        $ref: '#/definitions/models.Codebook'
      location:
        $ref: '#/definitions/models.Codebook'
      name:
        type: string
      notes:
        type: string
      price:
        type: number
      serialNumber:
        type: string
      system:
        $ref: '#/definitions/models.Codebook'
      uid:
        type: string
    type: object
  models.PhysicalItem:
    properties:
      catalogueItem:
        $ref: '#/definitions/models.CatalogueItem'
      currency:
        type: string
      eun:
        type: string
      itemUsage:
        $ref: '#/definitions/models.Codebook'
      orderNumber:
        type: string
      orderUid:
        type: string
      price: {}
      serialNumber:
        type: string
      uid:
        type: string
    type: object
  models.PhysicalItemMovement:
    properties:
      condition:
        $ref: '#/definitions/models.Codebook'
      deleteSourceSystem:
        type: boolean
      destinationSystemUid:
        type: string
      itemUsage:
        $ref: '#/definitions/models.Codebook'
      location:
        $ref: '#/definitions/models.Codebook'
      parentSystemUid:
        type: string
      sourceSystemUid:
        type: string
      systemName:
        type: string
    type: object
  models.Publication:
    properties:
      abstract:
        type: string
      articleTitle:
        type: string
      citations:
        items:
          type: string
        type: array
      doi:
        type: string
      eidScopus:
        type: string
      eissn:
        type: string
      impactFactor:
        type: number
      issn:
        type: string
      issue:
        type: integer
      journalTitle:
        type: string
      keywords:
        type: string
      language:
        type: string
      oecdFord:
        type: string
      openAccessType:
        $ref: '#/definitions/models.Codebook'
      pagesFrom:
        type: integer
      pagesTo:
        type: integer
      pagesTotal:
        type: integer
      pdfFileName:
        type: string
      pdfFileUrl:
        type: string
      publicationCategory:
        $ref: '#/definitions/models.Codebook'
      publicationSupport:
        $ref: '#/definitions/models.Codebook'
      publishDate:
        type: string
      quartile:
        type: string
      state:
        type: string
      statistics Beamlines:
        type: integer
      statisticsAlps:
        type: integer
      statisticsEric:
        type: integer
      statisticsTotal:
        type: integer
      uid:
        type: string
      url:
        type: string
      userCall:
        $ref: '#/definitions/models.Codebook'
      userExperiment:
        $ref: '#/definitions/models.Codebook'
      volume:
        type: integer
      wosNumber:
        type: string
      year:
        type: string
    type: object
  models.System:
    properties:
      description:
        type: string
      hasSubsystems:
        type: boolean
      history:
        items:
          $ref: '#/definitions/models.SystemHistory'
        type: array
      importance:
        $ref: '#/definitions/models.Codebook'
      location:
        $ref: '#/definitions/models.Codebook'
      miniImageUrl:
        items:
          type: string
        type: array
      name:
        type: string
      owner:
        $ref: '#/definitions/models.Codebook'
      parentPath:
        items:
          $ref: '#/definitions/models.SystemSimpleResponse'
        type: array
      parentUid:
        type: string
      physicalItem:
        $ref: '#/definitions/models.PhysicalItem'
      responsible:
        $ref: '#/definitions/models.Codebook'
      sparesIn:
        type: integer
      sparesOut:
        type: integer
      statistics:
        $ref: '#/definitions/models.SystemStatistics'
      subSystems:
        items:
          $ref: '#/definitions/models.System'
        type: array
      systemAlias:
        type: string
      systemCode:
        type: string
      systemLevel:
        type: string
      systemType:
        $ref: '#/definitions/models.Codebook'
      uid:
        type: string
      zone:
        $ref: '#/definitions/models.Codebook'
    type: object
  models.SystemCodeRequest:
    properties:
      parentUid:
        type: string
      systemTypeUid:
        type: string
      zoneUid:
        type: string
    type: object
  models.SystemHistory:
    properties:
      action:
        type: string
      changedAt:
        type: string
      changedBy:
        type: string
      detail:
        $ref: '#/definitions/models.SystemHistoryDetail'
      historyType:
        type: string
      uid:
        type: string
    type: object
  models.SystemHistoryDetail:
    properties:
      direction:
        type: string
      systemName:
        type: string
      systemUid:
        type: string
    type: object
  models.SystemSimpleResponse:
    properties:
      name:
        type: string
      uid:
        type: string
    type: object
  models.SystemStatistics:
    properties:
      minimalSpareParstCount:
        type: number
      sp_coverage:
        type: number
      sparePartsCount:
        type: integer
      sparePartsCoverageSum:
        type: number
      subsystemsCount:
        type: integer
    type: object
  models.SystemTreeUid:
    properties:
      children:
        items:
          $ref: '#/definitions/models.SystemTreeUid'
        type: array
      uid:
        type: string
    type: object
  models.SystemsMovement:
    properties:
      systemsToMoveUids:
        items:
          type: string
        type: array
      targetParentSystemUid:
        type: string
    type: object
  models.UserAuthInfo:
    properties:
      accessToken:
        type: string
      email:
        type: string
      facility:
        type: string
      facilityCode:
        type: string
      firstName:
        type: string
      isEnabled:
        type: boolean
      lastName:
        type: string
      passwordHash:
        type: string
      roles:
        items:
          type: string
        type: array
      uid:
        type: string
      username:
        type: string
    type: object
  models.WosAPIResponse:
    properties:
      hits:
        items:
          $ref: '#/definitions/models.WosHit'
        type: array
      metadata:
        $ref: '#/definitions/models.WosMetadata'
    type: object
  models.WosAuthor:
    properties:
      displayName:
        type: string
      researcherId:
        type: string
      wosStandard:
        type: string
    type: object
  models.WosCitation:
    properties:
      count:
        type: integer
      db:
        type: string
    type: object
  models.WosEditor:
    properties:
      displayName:
        type: string
    type: object
  models.WosHit:
    properties:
      citations:
        items:
          $ref: '#/definitions/models.WosCitation'
        type: array
      identifiers:
        $ref: '#/definitions/models.WosIdentifiers'
      keywords:
        $ref: '#/definitions/models.WosKeywords'
      names:
        $ref: '#/definitions/models.WosNames'
      source:
        $ref: '#/definitions/models.WosSource'
      sourceTypes:
        items:
          type: string
        type: array
      title:
        type: string
      types:
        items:
          type: string
        type: array
      uid:
        type: string
    type: object
  models.WosIdentifiers:
    properties:
      doi:
        type: string
      issn:
        type: string
    type: object
  models.WosKeywords:
    properties:
      authorKeywords:
        items:
          type: string
        type: array
    type: object
  models.WosMetadata:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  models.WosNames:
    properties:
      authors:
        items:
          $ref: '#/definitions/models.WosAuthor'
        type: array
      bookEditors:
        items:
          $ref: '#/definitions/models.WosEditor'
        type: array
    type: object
  models.WosPages:
    properties:
      begin:
        type: string
      count:
        type: integer
      end:
        type: string
      range:
        type: string
    type: object
  models.WosSource:
    properties:
      issue:
        type: string
      pages:
        $ref: '#/definitions/models.WosPages'
      publishMonth:
        type: string
      publishYear:
        type: integer
      sourceTitle:
        type: string
      volume:
        type: string
    type: object
host: localhost:50000
info:
  contact:
    email: jiri.svacha@eli-beams.eu
    name: Jiří Švácha
  description: This is the REST API to the PANDA database. \n This is the only place
    to access data from the PANDA database.
  title: PANDA REST API - localhost
  version: "1.0"
paths:
  /v1/general/{uid}/graph:
    get:
      description: Get graph by uid
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GraphResponse'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get graph by uid
      tags:
      - General
  /v1/getuserbyazureidtoken:
    get:
      description: Get user by azure id token
      parameters:
      - description: Tenant ID
        in: query
        name: tenantId
        required: true
        type: string
      - description: Azure ID Token
        in: query
        name: azureIdToken
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserAuthInfo'
        "401":
          description: Unauthorized
      summary: Get user by azure id token
      tags:
      - Security
  /v1/order:
    post:
      consumes:
      - application/json
      description: Insert a new order
      parameters:
      - description: Order object that needs to be inserted
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.OrderDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderDetail'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Insert a new order
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Update an order
      parameters:
      - description: Order object that needs to be updated
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.OrderDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderDetail'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update an order
      tags:
      - Orders
  /v1/order/{uid}:
    delete:
      description: Delete an order by order UID
      parameters:
      - description: Order UID
        in: path
        name: uid
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete an order
      tags:
      - Orders
  /v1/orders/eun-for-print:
    get:
      consumes:
      - application/json
      description: Get items for EUN print
      parameters:
      - description: EUNs
        in: query
        name: euns
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ItemForEunPrint'
            type: array
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get items for EUN print
      tags:
      - Orders
  /v1/physical-item/move:
    post:
      description: Move physical item from one system to another
      parameters:
      - description: Move physical item request model
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PhysicalItemMovement'
      responses:
        "200":
          description: Return destination system UID
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Move physical item
      tags:
      - Systems
  /v1/physical-item/replace:
    post:
      description: Replace physical items between two systems
      parameters:
      - description: Move physical item request model
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PhysicalItemMovement'
      responses:
        "200":
          description: Return destination system UID
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Replace physical item
      tags:
      - Systems
  /v1/publication:
    post:
      consumes:
      - application/json
      description: Create publication
      parameters:
      - description: Publication
        in: body
        name: publication
        required: true
        schema:
          $ref: '#/definitions/models.Publication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Publication'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Create publication
      tags:
      - Publications
  /v1/publication/{uid}:
    delete:
      description: Delete publication by uid
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Delete publication by uid
      tags:
      - Publications
    get:
      description: Get publication by uid
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Publication'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get publication by uid
      tags:
      - Publications
    put:
      consumes:
      - application/json
      description: Update publication
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      - description: Publication
        in: body
        name: publication
        required: true
        schema:
          $ref: '#/definitions/models.Publication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Publication'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Update publication
      tags:
      - Publications
  /v1/publication/wos/{doi}:
    get:
      description: Get WOS data by DOI
      parameters:
      - description: doi
        in: path
        name: doi
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.WosAPIResponse'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get WOS data by DOI
      tags:
      - Publications
  /v1/publications:
    get:
      description: Get publications
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: pagination
        in: query
        name: pagination
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Publication'
            type: array
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get publications
      tags:
      - Publications
  /v1/system/system-code:
    post:
      description: Create new system with new unique system code based on system type
        and zone
      parameters:
      - description: System code request model
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.SystemCodeRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.System'
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Create new system with code
      tags:
      - Systems
  /v1/systems/locations-flat:
    get:
      description: Get all locations flat list
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Codebook'
            type: array
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get all locations flat list
      tags:
      - Systems
  /v1/systems/move:
    post:
      description: Move systems to another parent system
      parameters:
      - description: Move systems request model
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.SystemsMovement'
      responses:
        "200":
          description: Return destination system UID
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Move systems
      tags:
      - Systems
  /v1/systems/recalculate-spare-parts:
    post:
      description: Recalculate spare parts for all systems
      responses:
        "204":
          description: No content
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Recalculate spare parts
      tags:
      - Systems
  /v1/systems/reload:
    post:
      description: Get systems tree by UIDs
      parameters:
      - description: Array of system tree UIDs
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SystemTreeUid'
          type: array
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.System'
            type: array
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get systems tree by UIDs
      tags:
      - Systems
  /v1/systems/sync-locations-by-eun:
    post:
      consumes:
      - application/json
      description: Sync system locations by EUNs
      parameters:
      - description: EUN with location UID
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/models.EunLocation'
          type: array
      responses:
        "204":
          description: No content
        "400":
          description: Bad request
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Sync system locations by EUNs
      tags:
      - Systems
  /v1/systems/system-types:
    get:
      description: Get all system types
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Codebook'
            type: array
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get all system types
      tags:
      - Systems
  /v1/systems/zones:
    get:
      description: Get all zones
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Codebook'
            type: array
        "500":
          description: Internal server error
      security:
      - BearerAuth: []
      summary: Get all zones
      tags:
      - Systems
  /v1/uuid/v4:
    get:
      description: Get UUID v4 string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Get UUID V4
      tags:
      - General
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: 'JWT token. <br> How to obtain: https://eli-eric.atlassian.net/wiki/spaces/CS/pages/948797504/How+to+get+PANDA+API+Token
      <br> Add word Bearer before the token here.'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
